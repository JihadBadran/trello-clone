{
  "$schema": "./node_modules/nx/schemas/nx-schema.json",
  "npmScope": "tc",
  "workspaceLayout": {
    "appsDir": "apps",
    "libsDir": "packages"
  },
  "namedInputs": {
    "default": ["{projectRoot}/**/*", "sharedGlobals"],
    "production": [
      "default",
      "!{projectRoot}/.eslintrc.json",
      "!{projectRoot}/eslint.config.mjs",
      "!{projectRoot}/**/?(*.)+(spec|test).[jt]s?(x)?(.snap)",
      "!{projectRoot}/tsconfig.spec.json",
      "!{projectRoot}/src/test-setup.[jt]s",
      "!{projectRoot}/**/*.stories.@(js|jsx|ts|tsx|mdx)",
      "!{projectRoot}/.storybook/**/*",
      "!{projectRoot}/tsconfig.storybook.json"
    ],
    "sharedGlobals": []
  },
  "nxCloudId": "68c8183570209b5e48a02384",
  "plugins": [
    {
      "plugin": "@nx/js/typescript",
      "options": {
        "typecheck": {
          "targetName": "typecheck"
        },
        "build": {
          "targetName": "build",
          "configName": "tsconfig.lib.json",
          "buildDepsName": "build-deps",
          "watchDepsName": "watch-deps"
        }
      },
      "exclude": [
        "application/*",
        "packages/application/*",
        "packages/application/app-columns/*",
        "packages/data/*",
        "packages/boards/domain/*",
        "packages/boards/application/*",
        "packages/boards/data/*",
        "packages/features/kanban/application/*"
      ]
    },
    {
      "plugin": "@nx/react/router-plugin",
      "options": {
        "buildTargetName": "build",
        "devTargetName": "dev",
        "startTargetName": "start",
        "watchDepsTargetName": "watch-deps",
        "buildDepsTargetName": "build-deps",
        "typecheckTargetName": "typecheck"
      }
    },
    {
      "plugin": "@nx/eslint/plugin",
      "options": {
        "targetName": "lint"
      }
    },
    {
      "plugin": "@nx/vite/plugin",
      "options": {
        "buildTargetName": "build",
        "testTargetName": "test",
        "serveTargetName": "serve",
        "devTargetName": "dev",
        "previewTargetName": "preview",
        "serveStaticTargetName": "serve-static",
        "typecheckTargetName": "typecheck",
        "buildDepsTargetName": "build-deps",
        "watchDepsTargetName": "watch-deps"
      }
    },
    {
      "plugin": "@nx/js/typescript",
      "include": [
        "application/*",
        "packages/application/*",
        "packages/application/app-columns/*",
        "packages/data/*",
        "packages/boards/domain/*",
        "packages/boards/application/*",
        "packages/boards/data/*",
        "packages/features/kanban/application/*"
      ],
      "options": {
        "typecheck": {
          "targetName": "typecheck"
        }
      }
    },
    {
      "plugin": "@nx/storybook/plugin",
      "options": {
        "serveStorybookTargetName": "storybook",
        "buildStorybookTargetName": "build-storybook",
        "testStorybookTargetName": "test-storybook",
        "staticStorybookTargetName": "static-storybook"
      }
    }
  ],
  "targetDefaults": {
    "test": {
      "dependsOn": ["^build"]
    }
  },
  "generators": {
    "@nx/react": {
      "application": {
        "babel": true,
        "style": "tailwind",
        "linter": "eslint",
        "bundler": "vite"
      },
      "component": {
        "style": "tailwind"
      },
      "library": {
        "style": "tailwind",
        "linter": "eslint",
        "unitTestRunner": "none"
      }
    }
  },
  "enforceModuleBoundaries": [
    {
      "sourceTag": "scope:app",
      "onlyDependOnLibsWithTags": ["scope:presentation", "scope:uikit"]
    },
    {
      "sourceTag": "scope:presentation",
      "onlyDependOnLibsWithTags": [
        "scope:application",
        "scope:uikit",
        "scope:foundation",
        "scope:presentation"
      ]
    },
    {
      "sourceTag": "scope:application",
      "onlyDependOnLibsWithTags": [
        "scope:domain",
        "scope:foundation",
        "scope:application"
      ]
    },
    {
      "sourceTag": "scope:application-react",
      "onlyDependOnLibsWithTags": [
        "scope:application",
        "scope:foundation",
        "scope:application-react"
      ]
    },
    {
      "sourceTag": "scope:infra",
      "onlyDependOnLibsWithTags": ["scope:application", "scope:foundation"]
    },
    {
      "sourceTag": "scope:domain",
      "onlyDependOnLibsWithTags": ["scope:foundation"]
    },
    {
      "sourceTag": "scope:uikit",
      "onlyDependOnLibsWithTags": ["scope:foundation"]
    }
  ]
}
